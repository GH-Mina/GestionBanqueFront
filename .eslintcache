[{"C:\\Users\\ASUS\\GestionBanqueFront\\src\\index.js":"1","C:\\Users\\ASUS\\GestionBanqueFront\\src\\App.js":"2","C:\\Users\\ASUS\\GestionBanqueFront\\src\\reportWebVitals.js":"3","C:\\Users\\ASUS\\GestionBanqueFront\\src\\Comptes\\Compte.js":"4","C:\\Users\\ASUS\\GestionBanqueFront\\src\\Comptes\\CompteSummary.js":"5"},{"size":517,"mtime":1612895187958,"results":"6","hashOfConfig":"7"},{"size":211,"mtime":1612895187954,"results":"8","hashOfConfig":"7"},{"size":375,"mtime":1612895187960,"results":"9","hashOfConfig":"7"},{"size":6243,"mtime":1612895187956,"results":"10","hashOfConfig":"7"},{"size":3402,"mtime":1612909948354,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1wg4bg6",{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"C:\\Users\\ASUS\\GestionBanqueFront\\src\\index.js",[],"C:\\Users\\ASUS\\GestionBanqueFront\\src\\App.js",["23"],"C:\\Users\\ASUS\\GestionBanqueFront\\src\\reportWebVitals.js",[],"C:\\Users\\ASUS\\GestionBanqueFront\\src\\Comptes\\Compte.js",[],"C:\\Users\\ASUS\\GestionBanqueFront\\src\\Comptes\\CompteSummary.js",["24","25","26","27","28","29","30"],"import TableRow from '@material-ui/core/TableRow';\r\nimport Input from \"@material-ui/core/Input\";\r\nimport { withStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport { useEffect, useState, useRef } from \"react\";\r\nconst StyledTableCell = withStyles((theme: Theme) =>\r\n    createStyles({\r\n        head: {\r\n            backgroundColor: \"blue\",\r\n            color: theme.palette.common.white,\r\n        },\r\n        body: {\r\n            fontSize: 14,\r\n        },\r\n    }),\r\n)(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            '&:nth-of-type(odd)': {\r\n                backgroundColor: theme.palette.action.hover,\r\n            },\r\n        },\r\n    }),\r\n)(TableRow);\r\nconst CustomTableCell = ({ row, name, onChange }) => {\r\n    const { isEditMode } = row;\r\n    return (\r\n        <StyledTableCell align=\"left\" >\r\n            {isEditMode ? (\r\n                <Input\r\n                    value={row[name]}\r\n                    name={name}\r\n                    onChange={e => onChange(e, row)}\r\n                />\r\n            ) : (\r\n                    row[name]\r\n                )}\r\n        </StyledTableCell>\r\n    );\r\n};\r\n\r\nexport default function CompteSummary({ Comptes}) {\r\n    let [tousComptes, setTousComptes] = useState(Comptes);\r\n    const [previous, setPrevious] = useState({});\r\n    const [error, setError] = useState('');\r\n\r\n    useEffect(() => {\r\n        setTousComptes(Comptes);\r\n    }, [Comptes])\r\n\r\n    return (\r\n        <div>\r\n            < TableContainer component={Paper} >\r\n                <Table size=\"small\" aria-label=\"simple table\">\r\n                    <TableHead >\r\n                        <TableRow>\r\n                            <StyledTableCell>Code</StyledTableCell>\r\n                            <StyledTableCell>Date de Création</StyledTableCell>\r\n                            <StyledTableCell>Solde</StyledTableCell>\r\n                            <StyledTableCell>Decouvert</StyledTableCell>\r\n                            <StyledTableCell>Employe</StyledTableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {tousComptes && tousComptes.map(row => {\r\n                            return (\r\n                                <StyledTableRow key={row.codeCompte} >\r\n                                    <StyledTableCell>{row.codeCompte}</StyledTableCell>\r\n                                    <StyledTableCell>{row.dateCreation}</StyledTableCell>\r\n                                    <StyledTableCell>{row.solde}</StyledTableCell>\r\n                                    <StyledTableCell>{row.decouvert}</StyledTableCell>\r\n                                    <StyledTableCell>{\"Employé1\"}</StyledTableCell>\r\n                                </StyledTableRow>\r\n                            )\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n",{"ruleId":"31","severity":1,"message":"32","line":1,"column":8,"nodeType":"33","messageId":"34","endLine":1,"endColumn":12},{"ruleId":"31","severity":1,"message":"35","line":12,"column":8,"nodeType":"33","messageId":"34","endLine":12,"endColumn":25},{"ruleId":"31","severity":1,"message":"36","line":13,"column":31,"nodeType":"33","messageId":"34","endLine":13,"endColumn":37},{"ruleId":"31","severity":1,"message":"37","line":35,"column":7,"nodeType":"33","messageId":"34","endLine":35,"endColumn":22},{"ruleId":"31","severity":1,"message":"38","line":54,"column":12,"nodeType":"33","messageId":"34","endLine":54,"endColumn":20},{"ruleId":"31","severity":1,"message":"39","line":54,"column":22,"nodeType":"33","messageId":"34","endLine":54,"endColumn":33},{"ruleId":"31","severity":1,"message":"40","line":55,"column":12,"nodeType":"33","messageId":"34","endLine":55,"endColumn":17},{"ruleId":"31","severity":1,"message":"41","line":55,"column":19,"nodeType":"33","messageId":"34","endLine":55,"endColumn":27},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'DeleteForeverIcon' is defined but never used.","'useRef' is defined but never used.","'CustomTableCell' is assigned a value but never used.","'previous' is assigned a value but never used.","'setPrevious' is assigned a value but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used."]